from check_orphan_waypoints import *
len(wpts)
w0 = wpts[0]
w0
list(w0)
w0.name
w0.text
w0[1]
w0[1].text
w0[2].text
names = [w[1].text for w in wpts]
len(names)
n0=names[0]
n0
names[1]
names[2:20]
n0 in names
non = [n in names if n[0:2] != "GC"]
n0[0:2]
help(str.startswith)
n0.startswith("PK")
non = [n in names if not n.startswith("GC")]
non = [n in names when not n.startswith("GC")]
non = [n in names && not n.startswith("GC")]
non = [n in names and not n.startswith("GC")]
help([])
help(comprehension)
non = [n for n in names if n[0:2] != "GC"]
len(non)
non[0:8]
gc = [n for n in names if n[0:2]=="GC"]
len(gc)
non
non0 = non[0]
non0
non0[2:]
h
hist
non0[2:] in gc
"GC" + non0[2:] in gc
non[0]
alt = ["GC" + n[2:] for n in non]
alt
alt
list(alt)
for a in alt:
    print(a, a in gc)
t = [a in gc for a in alt]
f = [a not in gc for a in alt]
f
t = [a for a in gc if a in alt]
t
f = [a for a not in gc if a in alt]
f = [a for a in gc if not a in alt]
f
len(t)
len(f)
t
t0=t[0]
t0
wpt.findall(t0)
wpts.find(t0)
wpts[:2]
n
names
t0 in names
f0 = f[0]
f0
f0 in names
f
%hist?
%hist ?
%history?
h -f history.txt
%history -f history.txt
