# vim:ts=4:sw=4:tw=0:wm=0:et:noic

"""Ask for directions in Google Maps

    https://www.google.com/maps/dir/?api=1
"""

from build_path import build_paths
from get_data_from_wpt import get_data_from_wpt
import sys


def directions(lats, lons, names, start, end, waypoints):
    """Create URI for a map from 'start' to 'end' via possibly empty
'waypoints' list of intermediate points"""

    result = "https://www.google.com/maps/dir/?api=1"
    result += "&origin=%s,%s" % (lats[start], lons[start])
    result += "&destination=%s,%s" % (lats[end], lons[end])
    if waypoints:
        waypoints_string = "&waypoints="
        for index, wpt in enumerate(waypoints):
            if index != 0:
                waypoints_string += "%7C"
            waypoints_string += "%s,%s" % (lats[wpt], lons[wpt])
        result += waypoints_string
    return result


if __name__ == "__main__":

    from json import loads
    # from with_sqlite3 import get_data
    import pml

    BOOTSTRAP_LINK = """<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">"""

    JQUERY = """<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>"""

    BOOTSTRAP = """<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>"""

    STYLE = """
    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
        vertical-align: center;
        padding: 3px;
        }
    th {
        text-align: center;
        font-size: 125%
        }
    h2 {
        text-align: center;
        }
    """

    json_filename = "outfile.json"
    print(f"Reading from {json_filename}", file=sys.stderr)
    with open(json_filename, "rb") as jsonfile:
        doc = loads(jsonfile.read())
    gpx = doc["gpx"]
    wpt = gpx["wpt"]
    data = get_data_from_wpt(wpt)
    lats, lons, texts, syms, names, usersorts, hrefs = zip(*data)

    doc = pml.XHTML("html")
    doc.title("Generated by %s" % __file__)
    doc.meta(charset="utf-8")
    doc.meta(name="viewport", content="width=device-width, initial-scale=1")
    doc += BOOTSTRAP_LINK
    doc += JQUERY
    doc += BOOTSTRAP
    doc.style(STYLE)
    doc.script("""
$(document).ready(function(){
    $(".btn").click(function(){
        $(this).addClass("btn-warning").removeClass("btn-primary");
    });
    $("#bobs_reset").click(function(){
        $(".btn-warning").addClass("btn-primary").removeClass("btn-warning");
    });
});
""")

    div = doc.body.div(klass="container")
    div.h2("Table of Map Routes")
    table = div.table(klass="table")

    thead = table.thead()
    tr = thead.tr()
    tr.th("Link", colspan="1")
    tr.th("Waypoints", colspan="2")

    tr = thead.tr()
    tr.th("To: UserSort")
    tr.th("Name")
    tr.th("Via Names")

    tbody = table.tbody()

    for item_index, items in enumerate(build_paths(data)):
        start, end, waypoints = items

        # show phony header row just for route starting point
        if item_index == 0:
            tr = tbody.tr()
            tr.td.button(
                "Reset: %s" % usersorts[start],
                klass="btn btn-primary",
                id="bobs_reset"
            )
            tr.td(texts[start])
            tr.td()

        tr = tbody.tr()
        href = directions(lats, lons, names, start, end, waypoints)
        td = tr.td.a(
            "%s" % (usersorts[end]),
            href=href,
            target="_blank",
            type="button",
            klass="btn btn-primary"
        )

        if hrefs[end]:
            tr.td.a(
                texts[end],
                href=hrefs[end],
                target="_blank"
            )
        else:
            tr.td(texts[end])

        td3 = tr.td()
        if waypoints:
            for index, waypoint in enumerate(waypoints):
                if index != 0:
                    td3.br()
                td3 += texts[waypoint]

    print("<!DOCTYPE HTML>\n" + str(doc))

# end of file
